

.. _sphx_glr_auto_examples_drawing_plot_directed.py:


==============
Directed Graph
==============

Draw a graph with directed edges using a colormap and different node sizes.

Edges have different colors and alphas (opacity). Drawn using matplotlib.




.. image:: /auto_examples/drawing/images/sphx_glr_plot_directed_001.png
    :align: center





.. code-block:: python

    # Author: Rodrigo Dorantes-Gilardi (rodgdor@gmail.com)

    from __future__ import division
    import matplotlib.pyplot as plt
    import networkx as nx

    G = nx.generators.directed.random_k_out_graph(10, 3, 0.5)
    pos = nx.layout.spring_layout(G)

    node_sizes = [3 + 10 * i for i in range(len(G))]
    M = G.number_of_edges()
    edge_colors = range(2, M + 2)
    edge_alphas = [(5 + i) / (M + 4) for i in range(M)]

    nodes = nx.draw_networkx_nodes(G, pos, node_size=node_sizes, node_color='blue')
    edges = nx.draw_networkx_edges(G, pos, node_size=node_sizes, arrowstyle='->',
                                   arrowsize=10, edge_color=edge_colors,
                                   edge_cmap=plt.cm.Blues, width=2)
    # set alpha value for each edge
    for i in range(M):
        edges[i].set_alpha(edge_alphas[i])

    ax = plt.gca()
    ax.set_axis_off()
    plt.show()

**Total running time of the script:** ( 0 minutes  0.076 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_directed.py <plot_directed.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_directed.ipynb <plot_directed.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
