

.. _sphx_glr_auto_examples_graph_plot_degree_sequence.py:


===============
Degree Sequence
===============

Random graph from given degree sequence.




.. image:: /auto_examples/graph/images/sphx_glr_plot_degree_sequence_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    True
    Configuration model
    Degree sequence [5, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1]
    Degree histogram
    degree #nodes
    5 1
    3 4
    2 3
    1 3




|


.. code-block:: python

    # Author: Aric Hagberg (hagberg@lanl.gov)
    # Date: 2004-11-03 08:11:09 -0700 (Wed, 03 Nov 2004)
    # Revision: 503

    #    Copyright (C) 2004-2018 by
    #    Aric Hagberg <hagberg@lanl.gov>
    #    Dan Schult <dschult@colgate.edu>
    #    Pieter Swart <swart@lanl.gov>
    #    All rights reserved.
    #    BSD license.

    import matplotlib.pyplot as plt
    from networkx import nx

    z = [5, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1]
    print(nx.is_graphical(z))

    print("Configuration model")
    G = nx.configuration_model(z)  # configuration model
    degree_sequence = [d for n, d in G.degree()]  # degree sequence
    print("Degree sequence %s" % degree_sequence)
    print("Degree histogram")
    hist = {}
    for d in degree_sequence:
        if d in hist:
            hist[d] += 1
        else:
            hist[d] = 1
    print("degree #nodes")
    for d in hist:
        print('%d %d' % (d, hist[d]))

    nx.draw(G)
    plt.show()

**Total running time of the script:** ( 0 minutes  0.023 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_degree_sequence.py <plot_degree_sequence.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_degree_sequence.ipynb <plot_degree_sequence.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
